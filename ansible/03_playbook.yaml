- name: 'Despliegue de aplicaci√≥n en AKS'
  hosts: localhost
  vars_files:
    - vars/tf_vars.yaml
    - vars/03_vars.yaml
  vars:
    acr_mysql_image: "{{ az_acr_url }}/{{ acr_repository }}/{{ acr_pull_mysql_image_name }}:{{ mysql_image_tag }}"
  tasks:
    - name: Get AZ aks get-credentials
      shell: 'az aks get-credentials --resource-group {{ rg_name }} --name {{ k8s_name }} --overwrite-existing'   

    - name: Create if not exists k8s namespace "{{ k8s_namespace }}"
      kubernetes.core.k8s:
        name: "{{ k8s_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
    - name: Pull Mysql image "{{ docker_mysql_image_name }}"
      containers.podman.podman_image:
        name: "{{ docker_mysql_image_name }}:{{ mysql_image_tag }}"
    - name: Push "{{ docker_mysql_image_name }}" to "{{ az_acr_url }}/{{ acr_repository }}"
      containers.podman.podman_image:
        name: "{{ acr_pull_mysql_image_name }}:{{ mysql_image_tag }}"
        push: true
        username: "{{ az_acr_user }}"
        password: "{{ az_acr_passwd }}"
        push_args:
          dest: "{{ az_acr_url }}/{{ acr_repository }}"
    - name: Remove local mysql image image "{{ docker_mysql_image_name }}:{{ mysql_image_tag }}"
      containers.podman.podman_image:
         name: "{{ docker_mysql_image_name }}:{{ mysql_image_tag }}"
         state: absent
    - name: Create Mysql Persitent Volume
      kubernetes.core.k8s:
        state: present
        template: 'templates/k8s_mysql_pv.j2'
    - name: Create Mysql Deployment
      kubernetes.core.k8s:
        state: present
        template: 'templates/k8s_mysql_deployment.j2'
        #    - name: Create Mysql LoadBalancer Service (Public ip)
        #kubernetes.core.k8s:
        #template: 'templates/k8s_mysql_service_lb.j2'

