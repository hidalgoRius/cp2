#Separo playbooks  01 y 02 para diferenciar lo que es la construcci√≥n de la imagen y el build, de lo que es el despliegue del contenedor con podman y se puede reaprovechar este playbook para otras imagenes.
---
- name: 'Podman generate system daemon and Container run'
  hosts: ContainerVM
  remote_user: "{{ podman_ssh_login }}"
  become: true
  vars_files:
    - vars/tf_vars.yaml
    - vars/01_02_vars.yaml # 01_playbook y 02_playbook comparten algunas variables.
  vars:
    - image_path: "{{ az_acr_url}}/{{ acr_repository }}/{{ image_name }}"
    - image: "{{ image_path }}:{{image_tag }}"
  tasks:
    - name: Create container image "{{ image }} with state present"
      containers.podman.podman_container:
        name: "{{ image_name }}"
        image: "{{ image }}"
        rm: true
        state: present
        #recreate: true
        publish: "{{ container_public_port }}:{{ httpd_listen_port }}"
        volume:
          - "/home/{{ podman_ssh_login }}/oci_webserver/web_source:/usr/local/apache2/htdocs:Z" #Seems to be a SELinux Issue. Suggests to add a :Z at the end of the mount volume. It works.
    - name: Generate systemd unit file for "{{ image_name }}"  container
      containers.podman.podman_generate_systemd:
        name: "{{ image_name }}"
        new: true
        no_header: true
        dest: /etc/systemd/system
    - name: Ensure "{{ image_name }}"  container is started and enabled
      ansible.builtin.systemd:
        name: "container-{{ image_name }}"
        daemon_reload: true
        state: started
        enabled: true
